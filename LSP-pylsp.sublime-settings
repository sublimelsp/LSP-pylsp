// This file is read-only and lives in
//
//    $DATA/Installed Packages/LSP-pylsp.sublime-package
//
// Provided you installed this package through Package Control. To modify one
// of these settings, you should see a template file to your right where you
// can override various key-value pairs.
//
// It is safe to partially override the "settings" key.
//
// For example, to select black as your formatter, you would put the following
// in the *right* view:
//
// {
//     "settings":
//     {
//         "pylsp.plugins.autopep8.enabled": false,
//         "pylsp.plugins.pylsp_black.enabled": true
//     }
// }
//
// You must then *save* the *right* view in
// $DATA/Packages/User/LSP-pylsp.sublime-settings.
{
    "command": ["$server_path"],
    // ST4
    "selector": "source.python",
    // ST3
    "languages": [
        {
            "languageId": "python",
            "scopes": ["source.python"],
            "syntaxes": ["Packages/Python/Python.sublime-syntax"],
        }
    ],
    "env": {
        "PYTHONPATH": "${sublime_py_files_dir}${pathsep}${packages}",
        // Override MYPYPATH to extend the paths that mypy searches when looking for stub files.
        // Alternatively create a mypy.ini configuration file at the root of the project with `mypy_path` option set.
        // See https://mypy.readthedocs.io/en/stable/config_file.html?highlight=mypy_path#confval-mypy_path
        "MYPYPATH": "${sublime_py_files_dir}${pathsep}${packages}"
    },
    "settings": {
        // --- JEDI configuration ---------------------------------------------
        // If you are using a virtual environment, specify a path to it to here.
        // "pylsp.plugins.jedi.environment": "./.venv/myproject",
        "pylsp.plugins.jedi.extra_paths": [
            "$sublime_py_files_dir",
            "$packages"
        ],
        "pylsp.plugins.jedi_completion.enabled": true,
        "pylsp.plugins.jedi_completion.fuzzy": true,
        // --- Linters --------------------------------------------------------
        // Configuration is computed first from user configuration (in home directory),
        // overridden by configuration passed in by the language client,
        // and then overridden by configuration discovered in the workspace.
        //
        // The default configuration source is pycodestyle, because the default
        // linter is pycodestyle. If instead you want to use flake8, you must
        // change "pylsp.configurationSources" to ["flake8"], and you must
        // enable the flake8 plugin (see below), and you must disable the
        // pycodestyle plugin (see below).
        "pylsp.configurationSources": ["pycodestyle"],
        // By default, pycodestyle is enabled
        "pylsp.plugins.pycodestyle.enabled": true,
        "pylsp.plugins.pydocstyle.enabled": false,
        "pylsp.plugins.pyflakes.enabled": false,
        "pylsp.plugins.pylint.enabled": false,
        "pylsp.plugins.flake8.enabled": false,
        "pylsp.plugins.pylsp_mypy.enabled": false,
        "pylsp.plugins.pylsp_mypy.dmypy": false,
        "pylsp.plugins.pylsp_mypy.live_mode": true,
        "pylsp.plugins.pylsp_mypy.strict": false,
        // --- Formatters -----------------------------------------------------
        // By default, autopep8 is enabled
        "pylsp.plugins.autopep8.enabled": true,
        "pylsp.plugins.yapf.enabled": false,
        "pylsp.plugins.pyls_isort.enabled": false,
        "pylsp.plugins.pylsp_black.enabled": false,
    },
}
