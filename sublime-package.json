{
  "contributions": {
    "settings": [
      {
        "file_patterns": [
          "/LSP-pyls.sublime-settings"
        ],
        "schema": {
          "$id": "sublime://settings/LSP-pyls",
          "definitions": {
            "PluginConfig": {
              "properties": {
                "settings": {
                  "properties": {
                    "pyls.env": {
                      "description": "Overrides for server environment variables.",
                      "type": "object",
                      "items": {
                        "type": "string"
                      }
                    },
                    "pyls.executable": {
                      "type": "string",
                      "default": "pyls",
                      "description": "Language server executable"
                    },
                    "pyls.configurationSources": {
                      "type": "array",
                      "default": [
                        "pycodestyle"
                      ],
                      "description": "List of configuration sources to use.",
                      "items": {
                        "type": "string",
                        "enum": [
                          "pycodestyle",
                          "pyflakes"
                        ]
                      },
                      "uniqueItems": true
                    },
                    "pyls.plugins.autopep8.enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.flake8_lint.enabled": {
                      "type": "boolean",
                      "default": false,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.jedi.extra_paths": {
                      "description": "Additional paths to extend the JEDI engine with.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "pyls.plugins.jedi.env_vars": {
                      "type": "object",
                      "items": {
                        "type": "string"
                      },
                      "description": "Define environment variables for jedi.Script and Jedi.names."
                    },
                    "pyls.plugins.jedi.environment": {
                      "type": "string",
                      "default": null,
                      "description": "Define environment for jedi.Script and Jedi.names."
                    },
                    "pyls.plugins.jedi_completion.enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.jedi_completion.include_params": {
                      "type": "boolean",
                      "default": true,
                      "description": "Auto-completes methods and classes with tabstops for each parameter."
                    },
                    "pyls.plugins.jedi_completion.include_class_objects": {
                      "type": "boolean",
                      "default": true,
                      "description": "Adds class objects as a separate completion item."
                    },
                    "pyls.plugins.jedi_completion.fuzzy": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable fuzzy when requesting autocomplete."
                    },
                    "pyls.plugins.jedi_definition.enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.jedi_definition.follow_imports": {
                      "type": "boolean",
                      "default": true,
                      "description": "The goto call will follow imports."
                    },
                    "pyls.plugins.jedi_definition.follow_builtin_imports": {
                      "type": "boolean",
                      "default": true,
                      "description": "If follow_imports is True will decide if it follow builtin imports."
                    },
                    "pyls.plugins.jedi_hover.enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.jedi_references.enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.jedi_signature_help.enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.jedi_symbols.enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.jedi_symbols.all_scopes": {
                      "type": "boolean",
                      "default": true,
                      "description": "If True lists the names of all scopes instead of only the module namespace."
                    },
                    "pyls.plugins.mccabe.enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.mccabe.threshold": {
                      "type": "number",
                      "default": 15,
                      "description": "The minimum threshold that triggers warnings about cyclomatic complexity."
                    },
                    "pyls.plugins.preload.enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.preload.modules": {
                      "type": "array",
                      "default": null,
                      "items": {
                        "type": "string"
                      },
                      "uniqueItems": true,
                      "description": "List of modules to import on startup"
                    },
                    "pyls.plugins.pycodestyle.enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.pycodestyle.exclude": {
                      "type": "array",
                      "default": null,
                      "items": {
                        "type": "string"
                      },
                      "uniqueItems": true,
                      "description": "Exclude files or directories which match these patterns."
                    },
                    "pyls.plugins.pycodestyle.filename": {
                      "type": "array",
                      "default": null,
                      "items": {
                        "type": "string"
                      },
                      "uniqueItems": true,
                      "description": "When parsing directories, only check filenames matching these patterns."
                    },
                    "pyls.plugins.pycodestyle.select": {
                      "type": "array",
                      "default": null,
                      "items": {
                        "type": "string"
                      },
                      "uniqueItems": true,
                      "description": "Select errors and warnings"
                    },
                    "pyls.plugins.pycodestyle.ignore": {
                      "type": "array",
                      "default": null,
                      "items": {
                        "type": "string"
                      },
                      "uniqueItems": true,
                      "description": "Ignore errors and warnings"
                    },
                    "pyls.plugins.pycodestyle.hangClosing": {
                      "type": "boolean",
                      "default": null,
                      "description": "Hang closing bracket instead of matching indentation of opening bracket's line."
                    },
                    "pyls.plugins.pycodestyle.maxLineLength": {
                      "type": "number",
                      "default": null,
                      "description": "Set maximum allowed line length."
                    },
                    "pyls.plugins.pydocstyle.enabled": {
                      "type": "boolean",
                      "default": false,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.pydocstyle.convention": {
                      "type": "string",
                      "default": null,
                      "enum": [
                        "pep257",
                        "numpy"
                      ],
                      "description": "Choose the basic list of checked errors by specifying an existing convention."
                    },
                    "pyls.plugins.pydocstyle.addIgnore": {
                      "type": "array",
                      "default": null,
                      "items": {
                        "type": "string"
                      },
                      "uniqueItems": true,
                      "description": "Ignore errors and warnings in addition to the specified convention."
                    },
                    "pyls.plugins.pydocstyle.addSelect": {
                      "type": "array",
                      "default": null,
                      "items": {
                        "type": "string"
                      },
                      "uniqueItems": true,
                      "description": "Select errors and warnings in addition to the specified convention."
                    },
                    "pyls.plugins.pydocstyle.ignore": {
                      "type": "array",
                      "default": null,
                      "items": {
                        "type": "string"
                      },
                      "uniqueItems": true,
                      "description": "Ignore errors and warnings"
                    },
                    "pyls.plugins.pydocstyle.select": {
                      "type": "array",
                      "default": null,
                      "items": {
                        "type": "string"
                      },
                      "uniqueItems": true,
                      "description": "Select errors and warnings"
                    },
                    "pyls.plugins.pydocstyle.match": {
                      "type": "string",
                      "default": "(?!test_).*\\.py",
                      "description": "Check only files that exactly match the given regular expression; default is to match files that don't start with 'test_' but end with '.py'."
                    },
                    "pyls.plugins.pydocstyle.matchDir": {
                      "type": "string",
                      "default": "[^\\.].*",
                      "description": "Search only dirs that exactly match the given regular expression; default is to match dirs which do not begin with a dot."
                    },
                    "pyls.plugins.pyflakes.enabled": {
                      "type": "boolean",
                      "default": false,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.pylint.enabled": {
                      "type": "boolean",
                      "default": false,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.pylint.args": {
                      "type": "array",
                      "default": null,
                      "items": {
                        "type": "string"
                      },
                      "uniqueItems": false,
                      "description": "Arguments to pass to pylint."
                    },
                    "pyls.plugins.pylint.executable": {
                      "type": "string",
                      "description": "Executable to run pylint with. Setting this will run pylint on unsaved files via stdin. Can slow down workflow. Only works with python3."
                    },
                    "pyls.plugins.pyls_black.enabled": {
                      "type": "boolean",
                      "default": false,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.pyls_isort.enabled": {
                      "type": "boolean",
                      "default": false,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.pyls_mypy.enabled": {
                      "type": "boolean",
                      "default": false,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.pyls_mypy.live_mode": {
                      "type": "boolean",
                      "default": false,
                      "markdownDescription": "Enable or disable `live_mode`.\n\nAs mypy is unaware of what file path is being checked, there are limitations with `live_mode`:\n\n - Imports cannot be followed correctly\n - Stub files are not validated correctly\n\n Turning off `live_mode` means you must save your changes for mypy diagnostics to update correctly."
                    },
                    "pyls.plugins.rope_completion.enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.plugins.yapf.enabled": {
                      "type": "boolean",
                      "default": false,
                      "description": "Enable or disable the plugin."
                    },
                    "pyls.rope.extensionModules": {
                      "type": "string",
                      "default": null,
                      "description": "Builtin and c-extension modules that are allowed to be imported and inspected by rope."
                    },
                    "pyls.rope.ropeFolder": {
                      "type": "array",
                      "default": null,
                      "items": {
                        "type": "string"
                      },
                      "uniqueItems": true,
                      "description": "The name of the folder in which rope stores project configurations and data.  Pass `null` for not using such a folder at all."
                    }
                  },
                  "additionalProperties": false
                },
              },
            },
          },
          "allOf": [
            {
              "$ref": "sublime://settings/LSP-plugin-base"
            },
            {
              "$ref": "sublime://settings/LSP-pyls#/definitions/PluginConfig"
            }
          ],
        }
      },
      {
        "file_patterns": [
          "/*.sublime-project"
        ],
        "schema": {
          "properties": {
            "settings": {
              "properties": {
                "LSP": {
                  "properties": {
                    "LSP-pyls": {
                      "$ref": "sublime://settings/LSP-pyls#/definitions/PluginConfig"
                    }
                  }
                }
              }
            }
          }
        }
      },
    ]
  }
}
